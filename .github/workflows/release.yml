name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check commit author permissions
        uses: actions/github-script@v7
        with:
          script: |
            const { data: user } = await github.rest.users.getByUsername({
              username: context.actor
            });
            
            const { data: permission } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            
            if (!['admin', 'maintain'].includes(permission.permission)) {
              core.setFailed(`User ${context.actor} does not have admin or maintainer permissions. Current permission: ${permission.permission}`);
            }
            
            core.info(`âœ“ User ${context.actor} has ${permission.permission} permissions`);
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "24"
          cache: npm
          cache-dependency-path: pkg/workflow/js/package-lock.json

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install npm dependencies
        run: npm ci
        working-directory: ./pkg/workflow/js

      - name: Build test
        run: make build

      - name: Run tests
        run: make test


  release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: Release with gh-extension-precompile
        uses: cli/gh-extension-precompile@v2
        with:
          go_version_file: go.mod
          build_script_override: scripts/build-release.sh

  trigger-maintenance:
    needs: release
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Trigger maintenance workflow in agentics repository
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: 'githubnext',
              repo: 'agentics',
              event_type: 'maintenance',
              client_payload: {
                triggered_by: 'gh-aw-release',
                release_tag: context.ref.replace('refs/tags/', ''),
                repository: context.repo.repo
              }
            });
