name: Build and Publish Pre-built Devcontainer

on:
  push:
    branches: [ main ]
    paths:
      - '.devcontainer/**'
      - 'go.mod'
      - 'go.sum'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/devcontainer.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '.devcontainer/**'
      - 'go.mod'
      - 'go.sum'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/devcontainer.yml'
  workflow_dispatch: # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/devcontainer

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install DevContainer CLI
        run: npm install -g @devcontainers/cli

      - name: Create temporary devcontainer config for building
        run: |
          # Copy the build configuration as the main devcontainer config temporarily
          cp .devcontainer/devcontainer.build.json .devcontainer/devcontainer.json.tmp
          # Add the build context and post-create commands
          cat > .devcontainer/devcontainer.build-final.json << 'EOF'
          {
            "name": "Go Build Environment",
            "image": "mcr.microsoft.com/devcontainers/go:1-bookworm",
            "features": {
              "ghcr.io/devcontainers/features/github-cli:1": {},
              "ghcr.io/devcontainers/features/docker-in-docker:2": {},
              "ghcr.io/devcontainers/features/node:1": {
                "version": "24"
              }
            },
            "postCreateCommand": "make deps && mkdir -p pkg/workflow/schemas && curl -s -o pkg/workflow/schemas/github-workflow.json 'https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json'",
            "customizations": {
              "vscode": {
                "extensions": [
                  "golang.go",
                  "GitHub.copilot-chat",
                  "GitHub.copilot",
                  "github.vscode-github-actions"
                ]
              }
            }
          }
          EOF

      - name: Build devcontainer image with dependencies pre-installed
        run: |
          devcontainer build \
            --workspace-folder . \
            --config .devcontainer/devcontainer.build-final.json \
            --image-name temp-build-image
          
          # Tag the image with our target name
          docker tag temp-build-image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-temp

      - name: Tag and push all versions
        run: |
          # Tag with all metadata tags  
          echo "${{ steps.meta.outputs.tags }}" | while read -r tag; do
            if [ -n "$tag" ]; then
              echo "Tagging with: $tag"
              docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build-temp "$tag"
              docker push "$tag"
            fi
          done

      - name: Generate image summary
        run: |
          echo "## Pre-built Devcontainer Image" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Built and pushed devcontainer image with pre-installed dependencies:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Image**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Includes:**" >> $GITHUB_STEP_SUMMARY
          echo "- Go development tools (golangci-lint, gopls, actionlint)" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js 24 and npm dependencies" >> $GITHUB_STEP_SUMMARY
          echo "- GitHub CLI" >> $GITHUB_STEP_SUMMARY
          echo "- Docker-in-Docker support" >> $GITHUB_STEP_SUMMARY
          echo "- GitHub Actions workflow schema" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This reduces codespace startup time from ~2-3 minutes to ~30 seconds." >> $GITHUB_STEP_SUMMARY