name: "copilot only"
on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/copilot.yml'
permissions: {}
concurrency:
  group: copilot-only
  cancel-in-progress: true
jobs:
  copilot:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'
      - name: Install GitHub Copilot CLI
        run: npm install -g @github/copilot    
      - name: Setup MCP Configuration
        run: |
          mkdir -p /tmp/logs
          mkdir -p /home/runner/.copilot
          cat > /home/runner/.copilot/mcp-config.json << 'EOF'
          {
            "mcpServers": {
              "tavily": {
                "type": "http",
                "url": "https://mcp.tavily.com/mcp/",
                "headers": {
                  "Authorization": "Bearer ${TAVILY_API_KEY}"
                },
                "tools": [
                  "*"
                ],
                "env": {
                  "TAVILY_API_KEY": "${TAVILY_API_KEY}"
                }
              }
            }
          }
          EOF
          cat /home/runner/.copilot/mcp-config.json
      - name: Execute GitHub Copilot CLI
        id: copilot_execution
        timeout-minutes: 5
        run: copilot --allow-all-paths --allow-all-tools --log-level all --log-dir /tmp/logs --prompt "If Tavily tools are not loaded, fail. Search for the latest trends in JavaScript frameworks."
        env:
          XDG_CONFIG_HOME: /home/runner
          COPILOT_AGENT_RUNNER_TYPE: STANDALONE
          GITHUB_TOKEN: ${{ secrets.COPILOT_CLI_TOKEN }}
          GITHUB_STEP_SUMMARY: ${{ env.GITHUB_STEP_SUMMARY }}
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
      - name: List files in /tmp/logs
        run: ls -la /tmp/logs
      - name: Print logs
        run: |
          # file all .log files in /tmp/logs and echo their contents
          for file in /tmp/logs/*.log; do
            echo "$file:"
            cat "$file"
            echo "-------------------------"
          done
      - name: Upload execution logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: copilot-logs
          path: /tmp/logs/
          if-no-files-found: ignore
