name: 'Daily Perf Improver Build Steps'
description: 'Sets up the performance development environment for gh-aw'
runs:
  using: "composite"
  steps:
    - name: Setup Environment
      shell: bash
      run: |
        echo "=== Setting up performance development environment ===" | tee -a build-steps.log
        echo "Timestamp: $(date -Iseconds)" | tee -a build-steps.log
        echo "Working directory: $(pwd)" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
        cache: true

    - name: Set up Node.js
      uses: actions/setup-node@v6
      with:
        node-version: "24"
        cache: npm
        cache-dependency-path: pkg/workflow/js/package-lock.json

    - name: Verify Go Installation
      shell: bash
      run: |
        echo "=== Go Environment ===" | tee -a build-steps.log
        go version | tee -a build-steps.log
        echo "GOPATH: $GOPATH" | tee -a build-steps.log
        echo "GOCACHE: $(go env GOCACHE)" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Verify Node Installation
      shell: bash
      run: |
        echo "=== Node Environment ===" | tee -a build-steps.log
        node --version | tee -a build-steps.log
        npm --version | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Install Go Dependencies
      shell: bash
      run: |
        echo "=== Installing Go Dependencies ===" | tee -a build-steps.log
        START_TIME=$(date +%s)
        
        echo "Running: go mod download" | tee -a build-steps.log
        go mod download 2>&1 | tee -a build-steps.log
        
        echo "Running: go mod verify" | tee -a build-steps.log
        go mod verify 2>&1 | tee -a build-steps.log
        
        echo "Running: go mod tidy" | tee -a build-steps.log
        go mod tidy 2>&1 | tee -a build-steps.log
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "✓ Go dependencies installed in ${DURATION}s" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Install Go Development Tools
      shell: bash
      run: |
        echo "=== Installing Go Development Tools ===" | tee -a build-steps.log
        START_TIME=$(date +%s)
        
        echo "Installing gopls..." | tee -a build-steps.log
        go install golang.org/x/tools/gopls@latest 2>&1 | tee -a build-steps.log
        
        echo "Installing actionlint..." | tee -a build-steps.log
        go install github.com/rhysd/actionlint/cmd/actionlint@latest 2>&1 | tee -a build-steps.log
        
        echo "Installing golangci-lint..." | tee -a build-steps.log
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest 2>&1 | tee -a build-steps.log
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "✓ Go tools installed in ${DURATION}s" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Install npm Global Dependencies
      shell: bash
      run: |
        echo "=== Installing npm Global Dependencies ===" | tee -a build-steps.log
        START_TIME=$(date +%s)
        
        echo "Installing prettier..." | tee -a build-steps.log
        npm install -g prettier 2>&1 | tee -a build-steps.log
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "✓ npm global packages installed in ${DURATION}s" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Install JavaScript Dependencies
      shell: bash
      run: |
        echo "=== Installing JavaScript Dependencies ===" | tee -a build-steps.log
        START_TIME=$(date +%s)
        
        cd pkg/workflow/js
        echo "Running: npm ci" | tee -a ../../../build-steps.log
        npm ci 2>&1 | tee -a ../../../build-steps.log
        cd -
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "✓ JavaScript dependencies installed in ${DURATION}s" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Download GitHub Actions Schema
      shell: bash
      run: |
        echo "=== Downloading GitHub Actions Schema ===" | tee -a build-steps.log
        START_TIME=$(date +%s)
        
        mkdir -p pkg/workflow/schemas
        curl -s -o pkg/workflow/schemas/github-workflow.json \
          "https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json" \
          2>&1 | tee -a build-steps.log
        
        if [ -f pkg/workflow/schemas/github-workflow.json ]; then
          SIZE=$(wc -c < pkg/workflow/schemas/github-workflow.json)
          echo "✓ Downloaded GitHub Actions schema (${SIZE} bytes)" | tee -a build-steps.log
          echo "Formatting schema with prettier..." | tee -a build-steps.log
          prettier --write pkg/workflow/schemas/github-workflow.json --ignore-path /dev/null 2>&1 | tee -a build-steps.log
          echo "✓ Schema formatted" | tee -a build-steps.log
        else
          echo "✗ Failed to download GitHub Actions schema" | tee -a build-steps.log
          exit 1
        fi
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "✓ Schema downloaded and formatted in ${DURATION}s" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Build gh-aw Binary
      shell: bash
      run: |
        echo "=== Building gh-aw Binary ===" | tee -a build-steps.log
        START_TIME=$(date +%s)
        
        echo "Running: make build" | tee -a build-steps.log
        make build 2>&1 | tee -a build-steps.log
        
        if [ -f ./gh-aw ]; then
          SIZE=$(wc -c < ./gh-aw)
          echo "✓ Built gh-aw binary (${SIZE} bytes)" | tee -a build-steps.log
          ./gh-aw --version 2>&1 | tee -a build-steps.log
        else
          echo "✗ Failed to build gh-aw binary" | tee -a build-steps.log
          exit 1
        fi
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        echo "✓ Binary built in ${DURATION}s" | tee -a build-steps.log
        echo "" | tee -a build-steps.log

    - name: Verify Build Environment
      shell: bash
      run: |
        echo "=== Build Environment Ready ===" | tee -a build-steps.log
        echo "✓ Go: $(go version)" | tee -a build-steps.log
        echo "✓ Node: $(node --version)" | tee -a build-steps.log
        echo "✓ npm: $(npm --version)" | tee -a build-steps.log
        echo "✓ gh-aw: $(./gh-aw --version)" | tee -a build-steps.log
        echo "✓ gopls: $(gopls version 2>&1 | head -1)" | tee -a build-steps.log
        echo "✓ golangci-lint: $(golangci-lint --version 2>&1 | head -1)" | tee -a build-steps.log
        echo "✓ actionlint: $(actionlint --version)" | tee -a build-steps.log
        echo "✓ prettier: $(prettier --version)" | tee -a build-steps.log
        echo "" | tee -a build-steps.log
        echo "Performance development environment ready!" | tee -a build-steps.log
        echo "See build-steps.log for complete setup details" | tee -a build-steps.log

    - name: Create Performance Testing Directory
      shell: bash
      run: |
        echo "=== Creating Performance Testing Directories ===" | tee -a build-steps.log
        mkdir -p /tmp/gh-aw/perf
        mkdir -p /tmp/gh-aw/benchmarks
        echo "✓ Created /tmp/gh-aw/perf for performance test artifacts" | tee -a build-steps.log
        echo "✓ Created /tmp/gh-aw/benchmarks for benchmark results" | tee -a build-steps.log
        echo "" | tee -a build-steps.log
