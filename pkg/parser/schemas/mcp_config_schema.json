{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "enum": ["stdio", "http", "local"],
      "description": "MCP connection type (local is an alias for stdio)"
    },
    "registry": {
      "type": "string",
      "description": "URI to the installation location when MCP is installed from a registry"
    },
    "url": {
      "type": "string",
      "description": "URL for HTTP MCP connections"
    },
    "command": {
      "type": "string",
      "description": "Command for stdio MCP connections"
    },
    "container": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9/:_.-]*$",
      "description": "Container image for stdio MCP connections (alternative to command)"
    },
    "args": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Arguments for command or container execution"
    },
    "entrypointArgs": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Arguments to add after the container image (container entrypoint arguments)"
    },
    "env": {
      "type": "object",
      "patternProperties": {
        "^[A-Z_][A-Z0-9_]*$": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "description": "Environment variables for MCP server"
    },
    "headers": {
      "type": "object",
      "patternProperties": {
        "^[A-Za-z0-9_-]+$": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "description": "HTTP headers for HTTP MCP connections"
    },
    "network": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)*$",
            "description": "Allowed domain name"
          },
          "minItems": 1,
          "uniqueItems": true,
          "description": "List of allowed domain names for network access"
        },
        "proxy-args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Custom proxy arguments for container-based MCP servers"
        }
      },
      "additionalProperties": false,
      "description": "Network configuration for container-based MCP servers"
    },
    "allowed": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of allowed tool names for this MCP server"
    },
    "version": {
      "type": "string",
      "description": "Version or tag for container images"
    }
  },
  "anyOf": [{ "required": ["type"] }, { "required": ["url"] }, { "required": ["command"] }, { "required": ["container"] }],
  "additionalProperties": false,
  "allOf": [
    {
      "if": {
        "properties": {
          "type": {
            "const": "http"
          }
        }
      },
      "then": {
        "required": ["url"],
        "not": {
          "anyOf": [{ "required": ["command"] }, { "required": ["container"] }, { "required": ["network"] }]
        }
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "const": "stdio"
          }
        }
      },
      "then": {
        "anyOf": [{ "required": ["command"] }, { "required": ["container"] }],
        "not": {
          "allOf": [{ "required": ["command"] }, { "required": ["container"] }]
        }
      }
    },
    {
      "if": {
        "properties": {
          "type": {
            "enum": ["stdio", "local"]
          }
        }
      },
      "then": {
        "not": {
          "required": ["headers"]
        }
      }
    },
    {
      "if": {
        "anyOf": [{ "required": ["command"] }, { "required": ["container"] }]
      },
      "then": {
        "not": {
          "required": ["headers"]
        }
      }
    },
    {
      "if": {
        "required": ["container"]
      },
      "then": {
        "properties": {
          "type": {
            "const": "stdio"
          }
        }
      }
    },
    {
      "if": {
        "required": ["network"]
      },
      "then": {
        "required": ["container"],
        "properties": {
          "type": {
            "const": "stdio"
          }
        }
      }
    }
  ]
}
