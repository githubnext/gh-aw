{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Workflow name that appears in the GitHub Actions interface. If not specified, defaults to the filename without extension."
    },
    "description": {
      "type": "string",
      "description": "Optional workflow description that is rendered as a comment in the generated GitHub Actions YAML file (.lock.yml)"
    },
    "on": {
      "description": "Workflow triggers that define when the agentic workflow should run. Supports standard GitHub Actions trigger events plus special command triggers for /commands (required)",
      "oneOf": [
        {
          "type": "string",
          "description": "Simple trigger event name (e.g., 'push', 'issues', 'pull_request', 'schedule')"
        },
        {
          "type": "object",
          "description": "Complex trigger configuration with event-specific filters and options",
          "properties": {
            "command": {
              "description": "Special command trigger for /command workflows (e.g., '/my-bot' in issue comments). Creates conditions to match slash commands automatically.",
              "oneOf": [
                {
                  "type": "null",
                  "description": "Null command configuration - defaults to using the workflow filename (without .md extension) as the command name"
                },
                {
                  "type": "object",
                  "description": "Command configuration object with custom command name",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Custom command name for slash commands (e.g., 'helper-bot' for '/helper-bot' triggers). Defaults to workflow filename without .md extension if not specified."
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "push": {
              "description": "Push event trigger that runs the workflow when code is pushed to the repository",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "branches": {
                  "type": "array",
                  "description": "Branches to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "branches-ignore": {
                  "type": "array",
                  "description": "Branches to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "paths": {
                  "type": "array",
                  "description": "Paths to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "paths-ignore": {
                  "type": "array",
                  "description": "Paths to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "tags": {
                  "type": "array",
                  "description": "List of git tag names or patterns to include for push events (supports wildcards)",
                  "items": {
                    "type": "string"
                  }
                },
                "tags-ignore": {
                  "type": "array",
                  "description": "List of git tag names or patterns to exclude from push events (supports wildcards)",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "pull_request": {
              "description": "Pull request event trigger that runs the workflow when pull requests are created, updated, or closed",
              "type": "object",
              "properties": {
                "types": {
                  "type": "array",
                  "description": "List of pull request event types to trigger on (e.g., 'opened', 'edited', 'closed', 'synchronize')",
                  "items": {
                    "type": "string"
                  }
                },
                "branches": {
                  "type": "array",
                  "description": "Branches to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "branches-ignore": {
                  "type": "array",
                  "description": "Branches to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "paths": {
                  "type": "array",
                  "description": "Paths to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "paths-ignore": {
                  "type": "array",
                  "description": "Paths to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "draft": {
                  "type": "boolean",
                  "description": "Filter by draft pull request state. Set to false to exclude draft PRs, true to include only drafts, or omit to include both"
                },
                "forks": {
                  "oneOf": [
                    {
                      "type": "string",
                      "description": "Single fork pattern (e.g., '*' for all forks, 'org/*' for org glob, 'org/repo' for exact match)"
                    },
                    {
                      "type": "array",
                      "description": "List of allowed fork repositories with glob support (e.g., 'org/repo', 'org/*', '*' for all forks)",
                      "items": {
                        "type": "string",
                        "description": "Repository pattern with optional glob support"
                      }
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "issues": {
              "description": "Issues event trigger that runs the workflow when repository issues are created, updated, or managed",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of issue events",
                  "items": {
                    "type": "string",
                    "enum": [
                      "opened",
                      "edited",
                      "deleted",
                      "transferred",
                      "pinned",
                      "unpinned",
                      "closed",
                      "reopened",
                      "assigned",
                      "unassigned",
                      "labeled",
                      "unlabeled",
                      "locked",
                      "unlocked",
                      "milestoned",
                      "demilestoned"
                    ]
                  }
                }
              }
            },
            "issue_comment": {
              "description": "Issue comment event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of issue comment events",
                  "items": {
                    "type": "string",
                    "enum": [
                      "created",
                      "edited",
                      "deleted"
                    ]
                  }
                }
              }
            },
            "schedule": {
              "type": "array",
              "description": "Scheduled trigger events",
              "items": {
                "type": "object",
                "properties": {
                  "cron": {
                    "type": "string",
                    "description": "Cron expression for schedule"
                  }
                },
                "required": [
                  "cron"
                ],
                "additionalProperties": false
              }
            },
            "workflow_dispatch": {
              "description": "Manual workflow dispatch trigger",
              "oneOf": [
                {
                  "type": "null",
                  "description": "Simple workflow dispatch trigger"
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "inputs": {
                      "type": "object",
                      "description": "Input parameters for manual dispatch",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Input description"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether input is required"
                          },
                          "default": {
                            "type": "string",
                            "description": "Default value"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "choice",
                              "boolean"
                            ],
                            "description": "Input type"
                          },
                          "options": {
                            "type": "array",
                            "description": "Options for choice type",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "workflow_run": {
              "description": "Workflow run trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "workflows": {
                  "type": "array",
                  "description": "List of workflows to trigger on",
                  "items": {
                    "type": "string"
                  }
                },
                "types": {
                  "type": "array",
                  "description": "Types of workflow run events",
                  "items": {
                    "type": "string",
                    "enum": [
                      "completed",
                      "requested"
                    ]
                  }
                },
                "branches": {
                  "type": "array",
                  "description": "Branches to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "branches-ignore": {
                  "type": "array",
                  "description": "Branches to ignore",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "release": {
              "description": "Release event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of release events",
                  "items": {
                    "type": "string",
                    "enum": [
                      "published",
                      "unpublished",
                      "created",
                      "edited",
                      "deleted",
                      "prereleased",
                      "released"
                    ]
                  }
                }
              }
            },
            "pull_request_review_comment": {
              "description": "Pull request review comment event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of pull request review comment events",
                  "items": {
                    "type": "string",
                    "enum": [
                      "created",
                      "edited",
                      "deleted"
                    ]
                  }
                }
              }
            },
            "stop-after": {
              "type": "string",
              "description": "Time when workflow should stop running. Supports multiple formats: absolute dates (YYYY-MM-DD HH:MM:SS, June 1 2025, 1st June 2025, 06/01/2025, etc.) or relative time deltas (+25h, +3d, +1d12h30m)"
            },
            "reaction": {
              "type": "string",
              "enum": [
                "+1",
                "-1",
                "laugh",
                "confused",
                "heart",
                "hooray",
                "rocket",
                "eyes"
              ],
              "description": "AI reaction to add/remove on triggering item (one of: +1, -1, laugh, confused, heart, hooray, rocket, eyes). Defaults to 'eyes' if not specified."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "permissions": {
      "description": "GitHub token permissions for the workflow. Controls what the GITHUB_TOKEN can access during execution. Use the principle of least privilege - only grant the minimum permissions needed.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "read-all",
            "write-all",
            "read",
            "write"
          ],
          "description": "Simple permissions string: 'read-all' (all read permissions), 'write-all' (all write permissions), 'read' or 'write' (basic level)"
        },
        {
          "type": "object",
          "description": "Detailed permissions object with granular control over specific GitHub API scopes",
          "additionalProperties": false,
          "properties": {
            "actions": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for GitHub Actions workflows and runs (read: view workflows, write: manage workflows, none: no access)"
            },
            "attestations": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for artifact attestations (read: view attestations, write: create attestations, none: no access)"
            },
            "checks": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for repository checks and status checks (read: view checks, write: create/update checks, none: no access)"
            },
            "contents": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for repository contents (read: view files, write: modify files/branches, none: no access)"
            },
            "deployments": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for repository deployments (read: view deployments, write: create/update deployments, none: no access)"
            },
            "discussions": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for repository discussions (read: view discussions, write: create/update discussions, none: no access)"
            },
            "id-token": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            },
            "issues": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ],
              "description": "Permission for repository issues (read: view issues, write: create/update/close issues, none: no access)"
            },
            "models": {
              "type": "string",
              "enum": [
                "read",
                "none"
              ],
              "description": "Permission for GitHub Copilot models (read: access AI models for agentic workflows, none: no access)"
            },
            "packages": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            },
            "pages": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            },
            "pull-requests": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            },
            "repository-projects": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            },
            "security-events": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            },
            "statuses": {
              "type": "string",
              "enum": [
                "read",
                "write",
                "none"
              ]
            }
          }
        }
      ]
    },
    "run-name": {
      "type": "string",
      "description": "Custom name for workflow runs that appears in the GitHub Actions interface (supports GitHub expressions like ${{ github.event.issue.title }})"
    },
    "defaults": {
      "type": "object",
      "description": "Default settings that will apply to all jobs in the workflow",
      "additionalProperties": false,
      "properties": {
        "run": {
          "type": "object",
          "description": "Default shell and working directory",
          "additionalProperties": false,
          "properties": {
            "shell": {
              "type": "string",
              "description": "Default shell for run steps"
            },
            "working-directory": {
              "type": "string",
              "description": "Default working directory for run steps"
            }
          }
        }
      }
    },
    "jobs": {
      "type": "object",
      "description": "Groups together all the jobs that run in the workflow",
      "additionalProperties": {
        "type": "object",
        "description": "Job definition",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the job"
          },
          "runs-on": {
            "oneOf": [
              {
                "type": "string",
                "description": "Runner type as string"
              },
              {
                "type": "array",
                "description": "Runner type as array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "Runner type as object",
                "additionalProperties": false
              }
            ]
          },
          "steps": {
            "type": "array",
            "description": "Job steps",
            "items": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "if": {
            "type": "string",
            "description": "Conditional execution for the job"
          },
          "needs": {
            "oneOf": [
              {
                "type": "string",
                "description": "Single job dependency"
              },
              {
                "type": "array",
                "description": "Multiple job dependencies",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "env": {
            "type": "object",
            "description": "Environment variables for the job",
            "additionalProperties": {
              "type": "string"
            }
          },
          "permissions": {
            "$ref": "#/properties/permissions"
          },
          "timeout-minutes": {
            "type": "integer",
            "description": "Job timeout in minutes"
          },
          "strategy": {
            "type": "object",
            "description": "Matrix strategy for the job",
            "additionalProperties": false
          },
          "continue-on-error": {
            "type": "boolean",
            "description": "Continue workflow on job failure"
          },
          "container": {
            "type": "object",
            "description": "Container to run the job in",
            "additionalProperties": false
          },
          "services": {
            "type": "object",
            "description": "Service containers for the job",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "outputs": {
            "type": "object",
            "description": "Job outputs",
            "additionalProperties": {
              "type": "string"
            }
          },
          "defaults": {
            "$ref": "#/properties/defaults"
          },
          "concurrency": {
            "$ref": "#/properties/concurrency"
          }
        }
      }
    },
    "runs-on": {
      "oneOf": [
        {
          "type": "string",
          "description": "Runner type as string"
        },
        {
          "type": "array",
          "description": "Runner type as array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "object",
          "description": "Runner type as object",
          "additionalProperties": false,
          "properties": {
            "group": {
              "type": "string",
              "description": "Runner group name for self-hosted runners"
            },
            "labels": {
              "type": "array",
              "description": "List of runner labels for self-hosted runners",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "timeout_minutes": {
      "type": "integer",
      "description": "Workflow timeout in minutes. Defaults to 15 minutes for agentic workflows. Has sensible defaults and can typically be omitted."
    },
    "concurrency": {
      "oneOf": [
        {
          "type": "string",
          "description": "Simple concurrency group name to prevent multiple runs. Agentic workflows automatically generate enhanced concurrency policies."
        },
        {
          "type": "object",
          "description": "Concurrency configuration object with group isolation and cancellation control",
          "additionalProperties": false,
          "properties": {
            "group": {
              "type": "string",
              "description": "Concurrency group name. Workflows in the same group cannot run simultaneously."
            },
            "cancel-in-progress": {
              "type": "boolean",
              "description": "Whether to cancel in-progress workflows in the same concurrency group when a new one starts"
            }
          },
          "required": [
            "group"
          ]
        }
      ]
    },
    "env": {
      "description": "Environment variables for the workflow",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },
    "network": {
      "description": "Network access control for AI engines using ecosystem identifiers and domain allowlists. Controls web fetch and search capabilities.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "defaults"
          ],
          "description": "Use default network permissions (basic infrastructure: certificates, JSON schema, Ubuntu, etc.)"
        },
        {
          "type": "object",
          "description": "Custom network access configuration with ecosystem identifiers and specific domains",
          "properties": {
            "allowed": {
              "type": "array",
              "description": "List of allowed domains or ecosystem identifiers (e.g., 'defaults', 'python', 'node', '*.example.com')",
              "items": {
                "type": "string",
              "description": "Domain name or ecosystem identifier (supports wildcards like '*.example.com' and ecosystem names like 'python', 'node')"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "if": {
      "type": "string",
      "description": "Conditional execution expression"
    },
    "steps": {
      "description": "Custom workflow steps",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": true
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "additionalProperties": true
              }
            ]
          }
        }
      ]
    },
    "post-steps": {
      "description": "Custom workflow steps to run after AI execution",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": true
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "additionalProperties": true
              }
            ]
          }
        }
      ]
    },
    "engine": {
      "description": "AI engine configuration that specifies which AI processor interprets and executes the markdown content of the workflow. Defaults to 'claude'.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "claude",
            "codex",
            "copilot",
            "custom"
          ],
          "description": "Simple engine name: 'claude' (default, Claude Code), 'copilot' (GitHub Copilot CLI), 'codex' (OpenAI Codex CLI), or 'custom' (user-defined steps)"
        },
        {
          "type": "object",
          "description": "Extended engine configuration object with advanced options for model selection, turn limiting, environment variables, and custom steps",
          "properties": {
            "id": {
              "type": "string",
              "enum": [
                "claude",
                "codex",
                "custom",
                "copilot"
              ],
              "description": "AI engine identifier: 'claude' (Claude Code), 'codex' (OpenAI Codex CLI), 'copilot' (GitHub Copilot CLI), or 'custom' (user-defined GitHub Actions steps)"
            },
            "version": {
              "type": "string",
              "description": "Optional version of the AI engine action (e.g., 'beta', 'stable'). Has sensible defaults and can typically be omitted."
            },
            "model": {
              "type": "string",
              "description": "Optional specific LLM model to use (e.g., 'claude-3-5-sonnet-20241022', 'gpt-4'). Has sensible defaults and can typically be omitted."
            },
            "max-turns": {
              "type": "integer",
              "description": "Maximum number of chat iterations per run. Helps prevent runaway loops and control costs. Has sensible defaults and can typically be omitted."
            },

            "user-agent": {
              "type": "string",
              "description": "Custom user agent string for GitHub MCP server configuration (codex engine only)"
            },
            "env": {
              "type": "object",
              "description": "Custom environment variables to pass to the AI engine, including secret overrides (e.g., OPENAI_API_KEY: ${{ secrets.CUSTOM_KEY }})",
              "additionalProperties": {
                "type": "string"
              }
            },
            "steps": {
              "type": "array",
              "description": "Custom GitHub Actions steps for 'custom' engine. Define your own deterministic workflow steps instead of using AI processing.",
              "items": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "error_patterns": {
              "type": "array",
              "description": "Custom error patterns for validating agent logs",
              "items": {
                "type": "object",
                "description": "Error pattern definition",
                "properties": {
                  "pattern": {
                    "type": "string",
                    "description": "Ecma script regular expression pattern to match log lines"
                  },
                  "level_group": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Capture group index (1-based) that contains the error level. Use 0 to infer from pattern content."
                  },
                  "message_group": {
                    "type": "integer", 
                    "minimum": 0,
                    "description": "Capture group index (1-based) that contains the error message. Use 0 to use the entire match."
                  },
                  "description": {
                    "type": "string",
                    "description": "Human-readable description of what this pattern matches"
                  }
                },
                "required": ["pattern"],
                "additionalProperties": false
              }
            },
            "config": {
              "type": "string",
              "description": "Additional TOML configuration text that will be appended to the generated config.toml in the action (codex engine only)"
            }
          },
          "required": [
            "id"
          ],
          "additionalProperties": false
        }
      ]
    },
    "claude": {
      "description": "Claude-specific configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "model": {
          "type": "string",
          "description": "Claude model to use"
        },
        "version": {
          "type": "string",
          "description": "Claude version"
        },
        "allowed": {
          "description": "Allowed Claude tools",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "mcp-servers": {
      "type": "object", 
      "description": "MCP server definitions",
      "patternProperties": {
        "^[a-zA-Z0-9_-]+$": {
          "oneOf": [
            {
              "$ref": "#/$defs/stdio_mcp_tool"
            },
            {
              "$ref": "#/$defs/http_mcp_tool"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "tools": {
      "type": "object",
      "description": "Tools and MCP (Model Context Protocol) servers available to the AI engine for GitHub API access, browser automation, file editing, and more",
      "properties": {
        "github": {
          "description": "GitHub API tools for repository operations (issues, pull requests, content management)",
          "oneOf": [
            {
              "type": "string",
              "description": "Simple GitHub tool configuration (enables all GitHub API functions)"
            },
            {
              "type": "object",
              "description": "GitHub tools object configuration with restricted function access",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "List of allowed GitHub API functions (e.g., 'create_issue', 'update_issue', 'add_comment')",
                  "items": {
                    "type": "string"
                  }
                },
                "version": {
                  "type": "string",
                  "description": "Optional version specification for the GitHub MCP server"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "claude": {
          "description": "Claude tools configuration",
          "oneOf": [
            {
              "type": "string",
              "description": "Simple claude tool string"
            },
            {
              "type": "object",
              "description": "Claude tools object configuration",
              "properties": {
                "allowed": {
                  "description": "Allowed Claude tools",
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "bash": {
          "description": "Bash shell command execution tool for running command-line programs and scripts",
          "oneOf": [
            {
              "type": "null",
              "description": "Enable bash tool with all shell commands allowed (security consideration: use restricted list in production)"
            },
            {
              "type": "array",
              "description": "List of allowed bash commands and patterns (e.g., ['echo', 'ls', 'git status', 'npm install'])",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "web-fetch": {
          "description": "Web content fetching tool for downloading web pages and API responses (subject to network permissions)",
          "oneOf": [
            {
              "type": "null",
              "description": "Enable web fetch tool with default configuration"
            },
            {
              "type": "object",
              "description": "Web fetch tool configuration object",
              "additionalProperties": false
            }
          ]
        },
        "web-search": {
          "description": "Web search tool for performing internet searches and retrieving search results (subject to network permissions)",
          "oneOf": [
            {
              "type": "null",
              "description": "Enable web search tool with default configuration"
            },
            {
              "type": "object",
              "description": "Web search tool configuration object",
              "additionalProperties": false
            }
          ]
        },
        "edit": {
          "description": "File editing tool for reading, creating, and modifying files in the repository",
          "oneOf": [
            {
              "type": "null",
              "description": "Enable edit tool"
            },
            {
              "type": "object",
              "description": "Edit tool configuration object",
              "additionalProperties": false
            }
          ]
        },
        "playwright": {
          "description": "Playwright browser automation tool for web scraping, testing, and UI interactions in containerized browsers",
          "oneOf": [
            {
              "type": "null",
              "description": "Enable Playwright tool with default settings (localhost access only for security)"
            },
            {
              "type": "object",
              "description": "Playwright tool configuration with custom version and domain restrictions",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "Optional Playwright container version (e.g., 'v1.41.0')"
                },
                "allowed_domains": {
                  "description": "Domains allowed for Playwright browser network access. Defaults to localhost only for security.",
                  "oneOf": [
                    {
                      "type": "array",
                      "description": "List of allowed domains or patterns (e.g., ['github.com', '*.example.com'])",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "string",
                      "description": "Single allowed domain (e.g., 'github.com')"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "cache-memory": {
          "description": "Cache memory MCP configuration for persistent memory storage",
          "oneOf": [
            {
              "type": "boolean",
              "description": "Enable cache-memory with default settings"
            },
            {
              "type": "object",
              "description": "Cache-memory configuration object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Custom cache key for memory MCP data (restore keys are auto-generated by splitting on '-')"
                },
                "docker-image": {
                  "type": "string",
                  "description": "Docker image to use for the memory MCP server (default: mcp/memory)"
                },
                "retention-days": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 90,
                  "description": "Number of days to retain uploaded artifacts (1-90 days, default: repository setting)"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Simple tool string",
        "type": "string"
      }
    },
    "command": {
      "type": "string",
      "description": "Command name for the workflow"
    },
    "cache": {
      "description": "Cache configuration for workflow (uses actions/cache syntax)",
      "oneOf": [
        {
          "type": "object",
          "description": "Single cache configuration",
          "properties": {
            "key": {
              "type": "string",
              "description": "An explicit key for restoring and saving the cache"
            },
            "path": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "A single path to cache"
                },
                {
                  "type": "array",
                  "description": "Multiple paths to cache",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "restore-keys": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "A single restore key"
                },
                {
                  "type": "array",
                  "description": "Multiple restore keys",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "upload-chunk-size": {
              "type": "integer",
              "description": "The chunk size used to split up large files during upload, in bytes"
            },
            "fail-on-cache-miss": {
              "type": "boolean",
              "description": "Fail the workflow if cache entry is not found"
            },
            "lookup-only": {
              "type": "boolean",
              "description": "If true, only checks if cache entry exists and skips download"
            }
          },
          "required": [
            "key",
            "path"
          ],
          "additionalProperties": false
        },
        {
          "type": "array",
          "description": "Multiple cache configurations",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "An explicit key for restoring and saving the cache"
              },
              "path": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A single path to cache"
                  },
                  {
                    "type": "array",
                    "description": "Multiple paths to cache",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "restore-keys": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A single restore key"
                  },
                  {
                    "type": "array",
                    "description": "Multiple restore keys",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "upload-chunk-size": {
                "type": "integer",
                "description": "The chunk size used to split up large files during upload, in bytes"
              },
              "fail-on-cache-miss": {
                "type": "boolean",
                "description": "Fail the workflow if cache entry is not found"
              },
              "lookup-only": {
                "type": "boolean",
                "description": "If true, only checks if cache entry exists and skips download"
              }
            },
            "required": [
              "key",
              "path"
            ],
            "additionalProperties": false
          }
        }
      ]
    },
    "safe-outputs": {
      "type": "object",
      "description": "Safe output processing configuration that automatically creates GitHub issues, comments, and pull requests from AI workflow output without requiring write permissions in the main job",
      "properties": {
        "allowed-domains": {
          "type": "array",
          "description": "List of allowed domains for URI filtering in AI workflow output. URLs from other domains will be replaced with '(redacted)' for security.",
          "items": {
            "type": "string"
          }
        },
        "create-issue": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for automatically creating GitHub issues from AI workflow output. The main job does not need 'issues: write' permission.",
              "properties": {
                "title-prefix": {
                  "type": "string",
                  "description": "Optional prefix to add to the beginning of the issue title (e.g., '[ai] ' or '[analysis] ')"
                },
                "labels": {
                  "type": "array",
                  "description": "Optional list of labels to automatically attach to created issues (e.g., ['automation', 'ai-generated'])",
                  "items": {
                    "type": "string"
                  }
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum number of issues to create (default: 1)",
                  "minimum": 1,
                  "maximum": 100
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue creation with default configuration"
            }
          ]
        },
        "create-discussion": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub discussions from agentic workflow output",
              "properties": {
                "title-prefix": {
                  "type": "string",
                  "description": "Optional prefix for the discussion title"
                },
                "category-id": {
                  "type": "string",
                  "description": "Optional discussion category ID. If not specified, uses the first available category"
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum number of discussions to create (default: 1)",
                  "minimum": 1,
                  "maximum": 100
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable discussion creation with default configuration"
            }
          ]
        },
        "add-comment": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for automatically creating GitHub issue or pull request comments from AI workflow output. The main job does not need write permissions.",
              "properties": {
                "max": {
                  "type": "integer",
                  "description": "Maximum number of comments to create (default: 1)",
                  "minimum": 1,
                  "maximum": 100
                },
                "target": {
                  "type": "string",
                  "description": "Target for comments: 'triggering' (default), '*' (any issue), or explicit issue number"
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue comment creation with default configuration"
            }
          ]
        },
        "create-pull-request": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub pull requests from agentic workflow output",
              "properties": {
                "title-prefix": {
                  "type": "string",
                  "description": "Optional prefix for the pull request title"
                },
                "labels": {
                  "type": "array",
                  "description": "Optional list of labels to attach to the pull request",
                  "items": {
                    "type": "string"
                  }
                },
                "draft": {
                  "type": "boolean",
                  "description": "Whether to create pull request as draft (defaults to true)"
                },
                "if-no-changes": {
                  "type": "string",
                  "enum": ["warn", "error", "ignore"],
                  "description": "Behavior when no changes to push: 'warn' (default - log warning but succeed), 'error' (fail the action), or 'ignore' (silent success)"
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable pull request creation with default configuration"
            }
          ]
        },
        "create-pull-request-review-comment": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub pull request review comments from agentic workflow output",
              "properties": {
                "max": {
                  "type": "integer",
                  "description": "Maximum number of review comments to create (default: 1)",
                  "minimum": 1,
                  "maximum": 100
                },
                "side": {
                  "type": "string",
                  "description": "Side of the diff for comments: 'LEFT' or 'RIGHT' (default: 'RIGHT')",
                  "enum": [
                    "LEFT",
                    "RIGHT"
                  ]
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable PR review comment creation with default configuration"
            }
          ]
        },
        "create-code-scanning-alert": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating repository security advisories (SARIF format) from agentic workflow output",
              "properties": {
                "max": {
                  "type": "integer",
                  "description": "Maximum number of security findings to include (default: unlimited)",
                  "minimum": 1
                },
                "driver": {
                  "type": "string",
                  "description": "Driver name for SARIF tool.driver.name field (default: 'GitHub Agentic Workflows Security Scanner')"
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable code scanning alert creation with default configuration (unlimited findings)"
            }
          ]
        },
        "add-labels": {
          "oneOf": [
            {
              "type": "null",
              "description": "Null configuration allows any labels"
            },
            {
              "type": "object",
              "description": "Configuration for adding labels to issues/PRs from agentic workflow output",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "Optional list of allowed labels that can be added. If omitted, any labels are allowed (including creating new ones).",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1
                },
                "max": {
                  "type": "integer",
                  "description": "Optional maximum number of labels to add (default: 3)",
                  "minimum": 1
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "update-issue": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for updating GitHub issues from agentic workflow output",
              "properties": {
                "status": {
                  "type": "null",
                  "description": "Allow updating issue status (open/closed) - presence of key indicates field can be updated"
                },
                "target": {
                  "type": "string",
                  "description": "Target for updates: 'triggering' (default), '*' (any issue), or explicit issue number"
                },
                "title": {
                  "type": "null",
                  "description": "Allow updating issue title - presence of key indicates field can be updated"
                },
                "body": {
                  "type": "null",
                  "description": "Allow updating issue body - presence of key indicates field can be updated"
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum number of issues to update (default: 1)",
                  "minimum": 1,
                  "maximum": 100
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue updating with default configuration"
            }
          ]
        },
        "push-to-pull-request-branch": {
          "oneOf": [
            {
              "type": "null",
              "description": "Use default configuration (branch: 'triggering', if-no-changes: 'warn')"
            },
            {
              "type": "object",
              "description": "Configuration for pushing changes to a specific branch from agentic workflow output",
              "properties": {
                "branch": {
                  "type": "string",
                  "description": "The branch to push changes to (defaults to 'triggering')"
                },
                "target": {
                  "type": "string",
                  "description": "Target for push operations: 'triggering' (default), '*' (any pull request), or explicit pull request number"
                },
                "title-prefix": {
                  "type": "string",
                  "description": "Required prefix for pull request title. Only pull requests with this prefix will be accepted."
                },
                "labels": {
                  "type": "array",
                  "description": "Required labels for pull request validation. Only pull requests with all these labels will be accepted.",
                  "items": {
                    "type": "string"
                  }
                },
                "if-no-changes": {
                  "type": "string",
                  "enum": ["warn", "error", "ignore"],
                  "description": "Behavior when no changes to push: 'warn' (default - log warning but succeed), 'error' (fail the action), or 'ignore' (silent success)"
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "missing-tool": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for reporting missing tools from agentic workflow output",
              "properties": {
                "max": {
                  "type": "integer",
                  "description": "Maximum number of missing tool reports (default: unlimited)",
                  "minimum": 1
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable missing tool reporting with default configuration"
            }
          ]
        },
        "upload-assets": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for publishing assets to an orphaned git branch",
              "properties": {
                "branch": {
                  "type": "string",
                  "description": "Branch name (default: 'assets/${{ github.workflow }}')",
                  "default": "assets/${{ github.workflow }}"
                },
                "max-size": {
                  "type": "integer",
                  "description": "Maximum file size in KB (default: 10240 = 10MB)",
                  "minimum": 1,
                  "maximum": 51200,
                  "default": 10240
                },
                "allowed-exts": {
                  "type": "array",
                  "description": "Allowed file extensions (default: common non-executable types)",
                  "items": {
                    "type": "string",
                    "pattern": "^\\.[a-zA-Z0-9]+$"
                  }
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token to use for this specific output type. Overrides global github-token if specified."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable asset publishing with default configuration"
            }
          ]
        },
        "staged": {
          "type": "boolean",
          "description": "If true, emit step summary messages instead of making GitHub API calls (preview mode)"
        },
        "env": {
          "type": "object",
          "description": "Environment variables to pass to safe output jobs",
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_]*$": {
              "type": "string",
              "description": "Environment variable value, typically a secret reference like ${{ secrets.TOKEN_NAME }}"
            }
          },
          "additionalProperties": false
        },
        "github-token": {
          "type": "string",
          "description": "GitHub token to use for safe output jobs. Typically a secret reference like ${{ secrets.GITHUB_TOKEN }} or ${{ secrets.CUSTOM_PAT }}"
        },
        "max-patch-size": {
          "type": "integer",
          "description": "Maximum allowed size for git patches in kilobytes (KB). Defaults to 1024 KB (1 MB). If patch exceeds this size, the job will fail.",
          "minimum": 1,
          "maximum": 10240,
          "default": 1024
        },
        "threat-detection": {
          "oneOf": [
            {
              "type": "boolean",
              "description": "Enable or disable threat detection for safe outputs (defaults to true when safe-outputs are configured)"
            },
            {
              "type": "object",
              "description": "Threat detection configuration object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether threat detection is enabled",
                  "default": true
                },


                "steps": {
                  "type": "array",
                  "description": "Array of extra job steps to run after detection",
                  "items": {
                    "$ref": "#/properties/githubActionsStep"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "jobs": {
          "type": "object",
          "description": "Custom safe-output jobs that can be executed based on agentic workflow output",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_-]*$": {
              "type": "object",
              "description": "Custom safe-output job configuration",
              "properties": {
                "runs-on": {
                  "description": "Runner specification for this job",
                  "oneOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                  ]
                },
                "if": {
                  "type": "string",
                  "description": "Conditional expression for job execution"
                },
                "needs": {
                  "description": "Job dependencies beyond the main job",
                  "oneOf": [
                    {"type": "string"},
                    {"type": "array", "items": {"type": "string"}}
                  ]
                },
                "env": {
                  "type": "object",
                  "description": "Job-specific environment variables",
                  "patternProperties": {
                    "^[A-Za-z_][A-Za-z0-9_]*$": {"type": "string"}
                  },
                  "additionalProperties": false
                },
                "permissions": {
                  "$ref": "#/properties/permissions"
                },
                "github-token": {
                  "type": "string",
                  "description": "GitHub token for this specific job"
                },
                "output": {
                  "type": "string",
                  "description": "Output configuration for the safe job"
                },
                "inputs": {
                  "type": "object",
                  "description": "Input parameters for the safe job (workflow_dispatch syntax) - REQUIRED: at least one input must be defined",
                  "minProperties": 1,
                  "patternProperties": {
                    "^[a-zA-Z_][a-zA-Z0-9_-]*$": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Input parameter description"
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Whether this input is required",
                          "default": false
                        },
                        "default": {
                          "type": "string",
                          "description": "Default value for the input"
                        },
                        "type": {
                          "type": "string",
                          "enum": ["string", "boolean", "choice"],
                          "description": "Input parameter type",
                          "default": "string"
                        },
                        "options": {
                          "type": "array",
                          "description": "Available options for choice type inputs",
                          "items": {"type": "string"}
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "steps": {
                  "type": "array",
                  "description": "Custom steps to execute in the safe job",
                  "items": {
                    "$ref": "#/properties/githubActionsStep"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },

    "roles": {
      "description": "Repository access roles required to trigger agentic workflows. Defaults to ['admin', 'maintainer'] for security. Use 'all' to allow any authenticated user (⚠️ security consideration).",
      "oneOf": [
        {
          "type": "string",
          "enum": ["all"],
          "description": "Allow any authenticated user to trigger the workflow (⚠️ disables permission checking entirely - use with caution)"
        },
        {
          "type": "array",
          "description": "List of repository permission levels that can trigger the workflow. Permission checks are automatically applied to potentially unsafe triggers.",
          "items": {
            "type": "string",
            "enum": ["admin", "maintainer", "maintain", "write", "triage"],
            "description": "Repository permission level: 'admin' (full access), 'maintainer'/'maintain' (repository management), 'write' (push access), 'triage' (issue management)"
          },
          "minItems": 1
        }
      ]
    },
    "githubActionsStep": {
      "type": "object",
      "description": "GitHub Actions workflow step",
      "properties": {
        "name": {
          "type": "string",
          "description": "A name for your step to display on GitHub"
        },
        "id": {
          "type": "string",
          "description": "A unique identifier for the step"
        },
        "if": {
          "type": "string",
          "description": "Conditional expression to determine if step should run"
        },
        "uses": {
          "type": "string",
          "description": "Selects an action to run as part of a step in your job"
        },
        "run": {
          "type": "string",
          "description": "Runs command-line programs using the operating system's shell"
        },
        "with": {
          "type": "object",
          "description": "Input parameters defined by the action",
          "additionalProperties": true
        },
        "env": {
          "type": "object",
          "description": "Environment variables for the step",
          "patternProperties": {
            "^[A-Za-z_][A-Za-z0-9_]*$": {"type": "string"}
          },
          "additionalProperties": false
        },
        "continue-on-error": {
          "type": "boolean",
          "description": "Prevents a job from failing when a step fails"
        },
        "timeout-minutes": {
          "type": "number",
          "description": "The maximum number of minutes to run the step before killing the process"
        },
        "working-directory": {
          "type": "string",
          "description": "Working directory for the step"
        },
        "shell": {
          "type": "string",
          "description": "Shell to use for the run command"
        }
      },
      "additionalProperties": false,
      "anyOf": [
        {"required": ["uses"]},
        {"required": ["run"]}
      ]
    }
  },
  "additionalProperties": false,
  "$defs": {
    "stdio_mcp_tool": {
      "type": "object",
      "description": "Stdio MCP tool configuration",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["stdio", "local"],
          "description": "MCP connection type for stdio (local is an alias for stdio)"
        },
        "registry": {
          "type": "string",
          "description": "URI to the installation location when MCP is installed from a registry"
        },
        "command": {
          "type": "string",
          "description": "Command for stdio MCP connections"
        },
        "container": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9/_.-]*$",
          "description": "Container image for stdio MCP connections (alternative to command)"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for command or container execution"
        },
        "env": {
          "type": "object",
          "patternProperties": {
            "^[A-Z_][A-Z0-9_]*$": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "description": "Environment variables for MCP server"
        },
        "network": {
          "type": "object",
          "properties": {
            "allowed": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)*$",
                "description": "Allowed domain name"
              },
              "minItems": 1,
              "uniqueItems": true,
              "description": "List of allowed domain names for network access"
            },
            "proxy-args": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Custom proxy arguments for container-based MCP servers"
            }
          },
          "additionalProperties": false,
          "description": "Network configuration for container-based MCP servers"
        },

        "allowed": {
          "type": "array",
          "description": "List of allowed tool functions",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "anyOf": [
        {"required": ["command"]},
        {"required": ["container"]}
      ],
      "not": {
        "allOf": [
          {"required": ["command"]},
          {"required": ["container"]}
        ]
      },
      "allOf": [
        {
          "if": {
            "required": ["network"]
          },
          "then": {
            "required": ["container"]
          }
        }
      ]
    },
    "http_mcp_tool": {
      "type": "object",
      "description": "HTTP MCP tool configuration",
      "properties": {
        "type": {
          "type": "string",
          "const": "http",
          "description": "MCP connection type for HTTP"
        },
        "registry": {
          "type": "string",
          "description": "URI to the installation location when MCP is installed from a registry"
        },
        "url": {
          "type": "string",
          "description": "URL for HTTP MCP connections"
        },
        "headers": {
          "type": "object",
          "patternProperties": {
            "^[A-Za-z0-9-]+$": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "description": "HTTP headers for HTTP MCP connections"
        },
        "allowed": {
          "type": "array",
          "description": "List of allowed tool functions",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["url"],
      "additionalProperties": false
    }
  }
}